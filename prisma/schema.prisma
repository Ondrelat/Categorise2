generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   // Ajoutez ce champ
  image         String?
  score         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Categories {
  id          String    @id @default(uuid())
  name        String
  description String
  slug        String    @unique
  parentId    String?   // Optional parent category reference
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
  parent      Categories? @relation("CategoryToCategory", fields: [parentId], references: [id])
  children    Categories[] @relation("CategoryToCategory")
}

model ArticleClassement {
  id      String    @id @default(uuid())
  tconst           String?
  averageRatingIMDB Float?
  numVotesIMDB      Int?
  titre_fr         String? 
  titre_en         String? 
  image_url        String?
  createdAt        DateTime  @default(now())
  titleType        String?
  genres           String?
  startYear        Int?
  endYear          Int?
  duration         String?
   @@map("article_classement") 
}

